#pragma once
#ifndef FLOW_TIME_H
#define FLOW_TIME_H
#include <vector>
#include "Rand.h"
using namespace std;

class timeslot{
public:
	vector<vector<int>> flow_time;
	vector<int> flow_node_time;
private:
	void setFlowNode(void){
		for (size_t i = 0; i < flow_time.size(); ++i){
			for (size_t j = 0; j < flow_time[i].size(); ++j){
				flow_node_time[i]++;
				flow_node_time[j]++;
			}
		}
	}
private:
	timeslot(timeslot flow, int x){
		flow_time = flow.flow_time;
		flow_node_time.resize(flow_time.size());
		Random rm;
		for (size_t i = 0; i < flow_time.size(); ++i){
			for (size_t j = 0; j < flow_time[i].size(); ++j)
				flow_time[i][j] *= rm.getUniform(0, x);
		}
		setFlowNode();
	}
};


#endif;

